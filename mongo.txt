Create a collection named orders.

db.createCollection('orders');
______________________________________________________________________

//Insert at least 3 documents that represent an order. IMPORTANT: See section below for fields.


orders.insert({ orderDate: "1/10/2016", orderTotal: "9.00",  lineItems: [
    {price: 1.00,
    quantity: 5,
    productName: 'fish'},
    {price: 315,
    quantity: 55,
    productName: 'cat'},
  ]});
orders.insert({ orderDate: "6/12/2010", orderTotal: "23.00",  lineItems: [
    {price: 3.50,
    quantity: 25,
    productName: 'scooters'},
    {price: 35,
    quantity: 55,
    productName: 'cars'},
    {price: 5,
    quantity: 1000,
    productName: 'bikes'},
  ]});
orders.insert({ orderDate: "11/15/2016", orderTotal: "11.00",  lineItems: [
    {price: 5.00,
    quantity: 25,
    productName: 'glockenspiel'},
  ]});
______________________________________________________________________
//Find a single order document, any order document.

orders.find({orderTotal = 5.00})
______________________________________________________________________
//Find all orders and make them look pretty.

orders.find().pretty()
______________________________________________________________________
//Find all orders with an orderDate that is prior to 1/1/2016.

orders.find({orderDate: {$lt: new Date('6/12/2010')}})
______________________________________________________________________
//Find all orders with an orderDate that is after 1/1/2016.

orders.find({orderDate: {$gt: Date('1/2/2016')}})
______________________________________________________________________
//Find orders with lineItems that have a quantity that is less than 50, but greater than 5. HINT: Look at $and and dot notation.

orders.find({$and : [{"lineItems.quantity": {$lt: 50}, "lineItems.quantity": {$gt: 5}}]})
______________________________________________________________________
//Update one of your line items to 42.99. HINT: Look at dot notation

db.orders.update({productName: "cars"}, {set: {"lineItems.0.price": 42.99} })

//Remove one of your orders.

db.orders.remove({"_id" : productName("glockenspiel")})
